/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "timeless.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <150>;
    flavor = "tap-unless-interrupted";
};

/ {
    macros {
        moom_full: moom_full {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(SPACE))) &kp SPACE>;
            label = "MOOM_FULL";
        };

        moom_left: moom_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(SPACE))) &kp LG(LEFT)>;
            label = "MOOM_LEFT";
        };

        moom_right: moom_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(SPACE))) &kp LG(RIGHT_ARROW)>;
            label = "MOOM_RIGHT";
        };
    };

    combos {
        compatible = "zmk,combos";

        numlayer {
            bindings = <&sl 4>;
            key-positions = <15 16>;
        };

        tab2 {
            bindings = <&kp TAB>;
            key-positions = <19 20>;
        };

        homerow_hyperspace {
            bindings = <&kp LS(LA(LC(LG(SPACE))))>;
            key-positions = <37 40>;
        };

        cmd_space {
            bindings = <&kp LG(SPACE)>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        thumb_0: thumb_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "THUMB_0";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&kp LC(B)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q              &kp W                &kp E            &kp R                &kp T                  &kp Y                 &kp U                 &kp I                 &kp O                   &kp P                  &none
&none  &kp A              &kp S                &kp D            &kp F                &kp G                  &kp H                 &kp J                 &kp K                 &kp L                   &kp SEMI               &none
&none  &hml LEFT_SHIFT Z  &hml LEFT_CONTROL X  &hml LEFT_ALT C  &hml LEFT_COMMAND V  &hml LEFT_CONTROL B    &hmr RIGHT_CONTROL N  &hmr RIGHT_COMMAND M  &hmr RIGHT_ALT COMMA  &hmr RIGHT_CONTROL DOT  &hmr RIGHT_SHIFT FSLH  &none
                                               &thumb_0         &kp ESCAPE           &lt 1 SPACE            &lt 2 ENTER           &kp BACKSPACE         &sk RIGHT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp GRAVE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp MINUS  &kp TAB    &trans  &trans                 &trans             &trans           &trans            &trans
&trans  &kp F1     &kp F2            &kp F3             &kp F4     &kp F5     &trans  &kp LEFT_PARENTHESIS   &kp LBKT           &kp LEFT_BRACE   &kp LESS_THAN     &trans
&trans  &kp F8     &kp F9            &kp F10            &kp F11    &kp F12    &trans  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp GREATER_THAN  &trans
                                     &trans             &trans     &trans     &trans  &trans                 &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp TILDE  &kp LG(EQUAL)  &kp UP_ARROW  &kp PAGE_UP    &kp HOME    &kp EQUAL  &kp EXCL       &kp AT       &kp HASH   &kp UNDER      &trans
&trans  &kp LG(C)  &kp LEFT       &kp DOWN      &kp RIGHT      &trans      &kp PLUS   &kp DOLLAR     &kp PERCENT  &kp CARET  &kp STAR       &trans
&trans  &kp LG(V)  &kp LG(MINUS)  &trans        &kp PAGE_DOWN  &kp END     &kp MINUS  &kp AMPERSAND  &kp STAR     &kp PIPE   &kp BACKSLASH  &trans
                                  &trans        &trans         &trans      &trans     &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp C_BRIGHTNESS_INC  &trans            &kp LC(K)     &trans            &bt BT_SEL 0    &bt BT_SEL 3  &kp LA(LC(LG(LEFT)))  &kp LA(LC(LG(SPACE)))  &kp LA(LC(LG(RIGHT)))  &kp C_VOLUME_UP    &trans
&trans  &kp C_BRIGHTNESS_DEC  &kp LC(H)         &kp LC(J)     &kp LC(L)         &bt BT_SEL 1    &bt BT_SEL 4  &trans                &trans                 &trans                 &kp C_VOLUME_DOWN  &trans
&trans  &sk LEFT_SHIFT        &sk LEFT_CONTROL  &sk LEFT_ALT  &sk LEFT_COMMAND  &bt BT_SEL 2    &bt BT_CLR    &sk RIGHT_COMMAND     &sk RIGHT_ALT          &sk RIGHT_CONTROL      &sk RIGHT_SHIFT    &trans
                                                &trans        &trans            &trans          &trans        &trans                &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp N0     &kp N1  &kp N2  &kp N3  &kp PERIOD  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS   &kp N4  &kp N5  &kp N6  &kp STAR    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp N7  &kp N8  &kp N9  &kp SLASH   &trans
                        &trans  &trans  &trans    &kp N0     &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
