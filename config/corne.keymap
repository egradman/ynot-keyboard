/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        moom_full: moom_full {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(SPACE))) &kp SPACE>;
            label = "MOOM_FULL";
        };

        moom_left: moom_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(SPACE))) &kp LG(LEFT)>;
            label = "MOOM_LEFT";
        };

        moom_right: moom_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(SPACE))) &kp LG(RIGHT_ARROW)>;
            label = "MOOM_RIGHT";
        };
    };

    combos {
        compatible = "zmk,combos";

        right_reset {
            bindings = <&bootloader>;
            key-positions = <40 41 39 11>;
        };

        left_reset {
            bindings = <&bootloader>;
            key-positions = <36 37 38 0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q             &kp W               &kp E           &kp R                    &kp T          &kp Y        &kp U                        &kp I                &kp O                  &kp P                 &trans
&trans  &kp A             &kp S               &kp D           &kp F                    &kp G          &kp H        &kp J                        &kp K                &kp L                  &kp SEMI              &trans
&trans  &mt LEFT_SHIFT Z  &mt LEFT_CONTROL X  &mt LEFT_ALT C  &mt LEFT_COMMAND V       &kp B          &kp N        &mt RIGHT_COMMAND M          &mt RIGHT_ALT COMMA  &mt RIGHT_CONTROL DOT  &mt RIGHT_SHIFT FSLH  &trans
                                              &kp LGUI        &mt LEFT_COMMAND ESCAPE  &lt 1 SPACE    &lt 2 ENTER  &mt RIGHT_CONTROL BACKSPACE  &kp RCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS          &kp LPAR  &kp RPAR  &kp UNDER         &trans
&trans  &kp F2    &kp F3  &kp F4    &kp F5    &kp F6       &kp MINUS  &kp SINGLE_QUOTE  &kp LBKT  &kp RBKT  &kp SINGLE_QUOTE  &trans
&trans  &kp F8    &kp F9  &kp F10   &kp F11   &kp F12      &kp SLASH  &kp EQUAL         &kp LBRC  &kp RBRC  &kp PIPE          &trans
                          &trans    &trans    &trans       &trans     &trans            &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp TILDE  &trans    &kp UP_ARROW  &kp PAGE_UP    &trans    &kp N0     &kp N1  &kp N2  &kp N3  &trans         &trans
&trans  &trans     &kp LEFT  &kp DOWN      &kp RIGHT      &trans    &kp PLUS   &kp N4  &kp N5  &kp N6  &trans         &trans
&trans  &trans     &trans    &trans        &kp PAGE_DOWN  &trans    &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp BACKSLASH  &trans
                             &trans        &trans         &trans    &trans     &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp C_BRIGHTNESS_INC  &trans            &kp LC(K)     &trans            &bt BT_SEL 0    &bt BT_SEL 3  &moom_left         &moom_full     &moom_right        &kp C_VOLUME_UP    &trans
&trans  &kp C_BRIGHTNESS_DEC  &kp LC(H)         &kp LC(J)     &kp LC(L)         &bt BT_SEL 1    &bt BT_SEL 4  &trans             &trans         &trans             &kp C_VOLUME_DOWN  &trans
&trans  &sk LEFT_SHIFT        &sk LEFT_CONTROL  &sk LEFT_ALT  &sk LEFT_COMMAND  &bt BT_SEL 2    &bt BT_CLR    &sk RIGHT_COMMAND  &sk RIGHT_ALT  &sk RIGHT_CONTROL  &sk RIGHT_SHIFT    &trans
                                                &trans        &trans            &trans          &trans        &trans             &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
