/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        moom_full: moom_full {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(LG(SPACE))) &kp SPACE>;
            label = "MOOM_FULL";
        };

        moom_left: moom_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(SPACE))) &kp LG(LEFT)>;
            label = "MOOM_LEFT";
        };

        moom_right: moom_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(SPACE))) &kp LG(RIGHT_ARROW)>;
            label = "MOOM_RIGHT";
        };
    };

    combos {
        compatible = "zmk,combos";

        right_reset {
            bindings = <&bootloader>;
            key-positions = <40 41 39 11>;
        };

        left_reset {
            bindings = <&bootloader>;
            key-positions = <36 37 38 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R       &kp T          &kp Y        &kp U          &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &kp A  &kp S  &kp D     &kp F       &kp G          &kp H        &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V       &kp B          &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LGUI  &kp ESCAPE  &lt 1 SPACE    &lt 2 ENTER  &kp BACKSPACE  &kp RCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET     &kp AMPS   &kp LPAR  &kp RPAR  &kp UNDER  &kp BSPC
&kp F1   &kp F2    &kp F3  &kp F4    &kp F5    &kp F6       &kp MINUS     &kp PLUS   &kp LBKT  &kp RBKT  &kp BSLH   &kp GRAVE
&kp F7   &kp F8    &kp F9  &kp F10   &kp F11   &kp F12      &kp ASTERISK  &kp EQUAL  &kp LBRC  &kp RBRC  &kp PIPE   &kp TILDE
                           &trans    &trans    &trans       &trans        &trans     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp UP_ARROW  &kp PAGE_UP    &trans    &trans  &kp N1  &kp N2  &kp N3  &trans         &kp BSPC
&trans     &trans                &kp LEFT              &kp DOWN      &kp RIGHT      &trans    &trans  &kp N4  &kp N5  &kp N6  &kp N0         &trans
&kp LSHFT  &kp K_VOLUME_DOWN     &kp K_VOLUME_UP       &trans        &kp PAGE_DOWN  &trans    &trans  &kp N7  &kp N8  &kp N9  &kp BACKSLASH  &trans
                                                       &trans        &trans         &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 3  &trans     &kp LC(K)  &trans     &trans    &trans  &moom_left  &moom_full  &moom_right  &trans  &trans
&bt BT_SEL 1  &bt BT_SEL 4  &kp LC(H)  &kp LC(J)  &kp LC(L)  &trans    &trans  &trans      &trans      &trans       &trans  &trans
&bt BT_SEL 2  &trans        &trans     &trans     &trans     &trans    &trans  &trans      &trans      &trans       &trans  &bt BT_CLR
                                       &trans     &trans     &trans    &trans  &trans      &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
